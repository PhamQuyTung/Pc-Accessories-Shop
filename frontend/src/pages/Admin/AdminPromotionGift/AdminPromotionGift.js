import React, { useEffect, useState } from 'react';
import axiosClient from '~/utils/axiosClient';
import classNames from 'classnames/bind';
import styles from './AdminPromotionGift.module.scss';

const cx = classNames.bind(styles);

function AdminPromotionGift() {
    const [promotions, setPromotions] = useState([]);
    const [newPromo, setNewPromo] = useState({
        title: '',
        description: '',
        discountType: 'percent', // percent | amount
        discountValue: 0,
        conditionProduct: '', // ID s·∫£n ph·∫©m ch√≠nh
        relatedProduct: '', // ID s·∫£n ph·∫©m mua k√®m
        link: '',
    });

    useEffect(() => {
        fetchPromotions();
    }, []);

    const fetchPromotions = async () => {
        try {
            const res = await axiosClient.get('/promotion-gifts');
            setPromotions(res.data || []);
        } catch (err) {
            console.error('L·ªói khi l·∫•y danh s√°ch khuy·∫øn m√£i:', err);
        }
    };

    const handleAddPromotion = async () => {
        try {
            await axiosClient.post('/promotion-gifts', newPromo);
            setNewPromo({
                title: '',
                description: '',
                discountType: 'percent',
                discountValue: 0,
                conditionProduct: '',
                relatedProduct: '',
                link: '',
            });
            fetchPromotions();
        } catch (err) {
            console.error('L·ªói khi th√™m khuy·∫øn m√£i:', err);
        }
    };

    const handleDelete = async (id) => {
        if (window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a khuy·∫øn m√£i n√†y?')) {
            await axiosClient.delete(`/promotion-gifts/${id}`);
            fetchPromotions();
        }
    };

    return (
        <div className={cx('wrap')}>
            <h2>üéÅ Qu·∫£n l√Ω khuy·∫øn m√£i qu√† t·∫∑ng</h2>

            <div className={cx('form')}>
                <input
                    type="text"
                    placeholder="Ti√™u ƒë·ªÅ khuy·∫øn m√£i"
                    value={newPromo.title}
                    onChange={(e) => setNewPromo({ ...newPromo, title: e.target.value })}
                />
                <textarea
                    placeholder="M√¥ t·∫£ chi ti·∫øt"
                    value={newPromo.description}
                    onChange={(e) => setNewPromo({ ...newPromo, description: e.target.value })}
                />
                <select
                    value={newPromo.discountType}
                    onChange={(e) => setNewPromo({ ...newPromo, discountType: e.target.value })}
                >
                    <option value="percent">Gi·∫£m theo %</option>
                    <option value="amount">Gi·∫£m theo s·ªë ti·ªÅn</option>
                </select>
                <input
                    type="number"
                    placeholder="Gi√° tr·ªã gi·∫£m"
                    value={newPromo.discountValue}
                    onChange={(e) => setNewPromo({ ...newPromo, discountValue: e.target.value })}
                />
                <input
                    type="text"
                    placeholder="ID s·∫£n ph·∫©m ch√≠nh"
                    value={newPromo.conditionProduct}
                    onChange={(e) => setNewPromo({ ...newPromo, conditionProduct: e.target.value })}
                />
                <input
                    type="text"
                    placeholder="ID s·∫£n ph·∫©m mua k√®m"
                    value={newPromo.relatedProduct}
                    onChange={(e) => setNewPromo({ ...newPromo, relatedProduct: e.target.value })}
                />
                <input
                    type="text"
                    placeholder="Link xem th√™m (tu·ª≥ ch·ªçn)"
                    value={newPromo.link}
                    onChange={(e) => setNewPromo({ ...newPromo, link: e.target.value })}
                />
                <button onClick={handleAddPromotion}>‚ûï Th√™m khuy·∫øn m√£i</button>
            </div>

            <h3>Danh s√°ch khuy·∫øn m√£i</h3>
            <table className={cx('table')}>
                <thead>
                    <tr>
                        <th>Ti√™u ƒë·ªÅ</th>
                        <th>Lo·∫°i</th>
                        <th>Gi√° tr·ªã</th>
                        <th>M√¥ t·∫£</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    {promotions.map((promo) => (
                        <tr key={promo._id}>
                            <td>{promo.title}</td>
                            <td>{promo.discountType === 'percent' ? '%' : '‚Ç´'}</td>
                            <td>
                                {promo.discountType === 'percent'
                                    ? `${promo.discountValue}%`
                                    : `${promo.discountValue.toLocaleString('vi-VN')}‚Ç´`}
                            </td>
                            <td>{promo.description}</td>
                            <td>
                                <button onClick={() => handleDelete(promo._id)}>üóëÔ∏è</button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
}

export default AdminPromotionGift;
