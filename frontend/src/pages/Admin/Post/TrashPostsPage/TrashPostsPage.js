import React, { useEffect, useState } from 'react';
import axiosClient from '~/utils/axiosClient';
import styles from './TrashPostsPage.module.scss';
import classNames from 'classnames/bind';
import { confirmAlert } from '~/utils/alertSweet'; // üëà d√πng sweetalert2 confirm
import { useToast } from '~/components/ToastMessager/ToastMessager'; // üëà toast th√¥ng b√°o

const cx = classNames.bind(styles);

const TrashPostsPage = () => {
    const [posts, setPosts] = useState([]);
    const showToast = useToast();

    useEffect(() => {
        fetchTrash();
    }, []);

    const fetchTrash = async () => {
        try {
            const res = await axiosClient.get('/posts/trash');
            setPosts(res.data);
        } catch (err) {
            console.error('‚ùå L·ªói t·∫£i th√πng r√°c:', err);
        }
    };

    const handleRestore = async (id) => {
        try {
            await axiosClient.put(`/posts/${id}`, { status: 'draft' });
            setPosts(posts.filter((p) => p._id !== id));
            showToast('Kh√¥i ph·ª•c th√†nh c√¥ng!', 'success');
        } catch (err) {
            console.error('‚ùå L·ªói kh√¥i ph·ª•c:', err);
            showToast('Kh√¥i ph·ª•c th·∫•t b·∫°i!', 'error');
        }
    };

    const handleDeleteForever = async (id) => {
        const result = await confirmAlert(
            'B·∫°n ch·∫Øc ch·∫Øn?',
            'B√†i vi·∫øt s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn v√† kh√¥ng th·ªÉ kh√¥i ph·ª•c!',
            'warning',
        );
        if (!result.isConfirmed) return;

        try {
            await axiosClient.delete(`/posts/${id}`);
            setPosts(posts.filter((p) => p._id !== id));
            showToast('ƒê√£ x√≥a vƒ©nh vi·ªÖn!', 'success');
        } catch (err) {
            console.error('‚ùå L·ªói x√≥a vƒ©nh vi·ªÖn:', err);
            showToast('X√≥a th·∫•t b·∫°i!', 'error');
        }
    };

    return (
        <div className={cx('trash-page')}>
            <h1 className={cx('title')}>Qu·∫£n l√Ω th√πng r√°c</h1>

            {posts.length === 0 ? (
                <p className={cx('empty')}>Th√πng r√°c tr·ªëng.</p>
            ) : (
                <table className={cx('table')}>
                    <thead>
                        <tr>
                            <th>Ti√™u ƒë·ªÅ</th>
                            <th>T√°c gi·∫£</th>
                            <th>Chuy√™n m·ª•c</th>
                            <th>Ng√†y x√≥a</th>
                            <th>H√†nh ƒë·ªông</th>
                        </tr>
                    </thead>
                    <tbody>
                        {posts.map((post) => (
                            <tr key={post._id}>
                                <td>{post.title}</td>
                                <td>{post.author?.name}</td>
                                <td>{post.category?.name}</td>
                                <td>{new Date(post.updatedAt).toLocaleDateString('vi-VN')}</td>
                                <td>
                                    <button onClick={() => handleRestore(post._id)} className={cx('btn-restore')}>
                                        Kh√¥i ph·ª•c
                                    </button>
                                    <button onClick={() => handleDeleteForever(post._id)} className={cx('btn-delete')}>
                                        X√≥a vƒ©nh vi·ªÖn
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            )}
        </div>
    );
};

export default TrashPostsPage;
